package visao;

import dao.CadastrarCategoriaDao;
import java.util.ArrayList;
import modelo.CadastrarCategoria;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author luiz
 */
public class FrmCadastrarCat extends javax.swing.JFrame {

    private CadastrarCategoria objetoCadastrar;

    public FrmCadastrarCat() {
        initComponents();
        this.objetoCadastrar = new CadastrarCategoria();
        setLocationRelativeTo(null);


    }

    public void carregaTabela() {
        DefaultTableModel modelo = (DefaultTableModel) this.JTableCategoria.getModel();
        modelo.setNumRows(0);

        CadastrarCategoriaDao dao = new CadastrarCategoriaDao();
        for (CadastrarCategoria categoria : dao.getLista()) {
            modelo.addRow(new Object[]{
                categoria.getId(),
                categoria.getNome()
            });
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        JTextID = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        JTextNome = new javax.swing.JTextField();
        JButtonCadastrar = new javax.swing.JButton();
        JButtonEditar = new javax.swing.JButton();
        JButtonExcluir = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        JTableCategoria = new javax.swing.JTable();
        JButtonSair = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        JButtonListar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Cadastrar Categoria");
        setPreferredSize(new java.awt.Dimension(982, 670));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jLabel1.setText("Código da categoria");

        JTextID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JTextIDActionPerformed(evt);
            }
        });

        jLabel2.setText("Nome Categoria");

        JButtonCadastrar.setText("Cadastrar");
        JButtonCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JButtonCadastrarActionPerformed(evt);
            }
        });

        JButtonEditar.setText("Editar");
        JButtonEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JButtonEditarActionPerformed(evt);
            }
        });

        JButtonExcluir.setText("Excluir");
        JButtonExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JButtonExcluirActionPerformed(evt);
            }
        });

        JTableCategoria.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null}
            },
            new String [] {
                "Código", "Nome Categoria"
            }
        ));
        JTableCategoria.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JTableCategoriaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(JTableCategoria);

        JButtonSair.setText("Sair");
        JButtonSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JButtonSairActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel3.setText("Cadastrar Categoria");

        JButtonListar.setText("Listar");
        JButtonListar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JButtonListarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 496, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(JButtonCadastrar)
                                    .addGap(42, 42, 42)
                                    .addComponent(JButtonListar)
                                    .addGap(38, 38, 38)
                                    .addComponent(JButtonEditar)
                                    .addGap(44, 44, 44)
                                    .addComponent(JButtonExcluir))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(JTextID)
                                    .addComponent(JTextNome, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2))))
                        .addGap(0, 6, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(JButtonSair)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(38, 38, 38)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(JTextID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(JTextNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(JButtonCadastrar)
                            .addComponent(JButtonEditar)
                            .addComponent(JButtonExcluir)
                            .addComponent(JButtonListar))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(JButtonSair)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void JButtonCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JButtonCadastrarActionPerformed
        try {
            String nome = JTextNome.getText().trim();
            int id;

            if (nome.length() < 2) {
                throw new Mensagem("O nome deve conter ao menos 2 caracteres.");
            }

            if (JTextID.getText().trim().isEmpty()) {
                throw new Mensagem("ID não pode estar vazio.");
            }

            try {
                id = Integer.parseInt(JTextID.getText().trim());
                if (id < 0) {
                    throw new Mensagem("ID deve ser maior que zero.");

                }
                ArrayList<CadastrarCategoria> categorias = new CadastrarCategoriaDao().getLista();

                for (CadastrarCategoria categoria : categorias) {
                    if (categoria.getId() == id) {
                        throw new Mensagem("ID " + id + " já cadastrado");

                    }
                    if (categoria.getNome().equals(nome)) {
                        throw new Mensagem("Nome " + nome + " já cadastrado");

                    }

                }
            } catch (NumberFormatException e) {
                throw new Mensagem("ID deve ser um número válido.");
            }

            this.objetoCadastrar.setId(id);
            this.objetoCadastrar.setNome(nome);
            CadastrarCategoriaDao dao = new CadastrarCategoriaDao();
            if (dao.inserirCategoria(this.objetoCadastrar)) {
                JOptionPane.showMessageDialog(null, "Categoria cadastrada com sucesso!");
                JTextID.setText("");
                JTextNome.setText("");
                carregaTabela();
                this.objetoCadastrar = new CadastrarCategoria();
            }

        } catch (Mensagem erro) {
            JOptionPane.showMessageDialog(null, erro.getMessage());
        }

    }//GEN-LAST:event_JButtonCadastrarActionPerformed

    private void JButtonEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JButtonEditarActionPerformed
        try {

            int id = 0;
            String nome = "";

            if (this.JTextNome.getText().length() < 2) {
                throw new Mensagem("Nome deve conter ao menos 2 caracteres.");
            } else {
                nome = this.JTextNome.getText();
            }

            if (this.JTableCategoria.getSelectedRow() == -1) {
                throw new Mensagem("Primeiro selecione uma categoria para editar");
            } else {
                id = Integer.parseInt(this.JTableCategoria.getValueAt(this.JTableCategoria.getSelectedRow(), 0).toString());
            }

            CadastrarCategoria categoriaAtualizada = new CadastrarCategoria(id, nome);

            CadastrarCategoriaDao dao = new CadastrarCategoriaDao();
            if (dao.atualizarCategoria(categoriaAtualizada)) {
                this.JTextID.setText("");
                this.JTextNome.setText("");
                JOptionPane.showMessageDialog(rootPane, "Categoria Alterada com Sucesso!");
            }

            System.out.println(new CadastrarCategoriaDao().getLista().toString());

        } catch (Mensagem erro) {
            JOptionPane.showMessageDialog(null, erro.getMessage());
        } catch (NumberFormatException erro2) {
            JOptionPane.showMessageDialog(null, "Informe um ID válido.");
        } finally {

            carregaTabela();
        }        
    }//GEN-LAST:event_JButtonEditarActionPerformed

    private void JButtonSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JButtonSairActionPerformed
        this.dispose();
    }//GEN-LAST:event_JButtonSairActionPerformed

    private void JTableCategoriaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JTableCategoriaMouseClicked
        if (this.JTableCategoria.getSelectedRow() != -1) {
            String id = this.JTableCategoria.getValueAt(this.JTableCategoria.getSelectedRow(), 0).toString();
            String nome = this.JTableCategoria.getValueAt(this.JTableCategoria.getSelectedRow(), 1).toString();
            this.JTextID.setText(id);
            this.JTextNome.setText(nome);
        }

    }//GEN-LAST:event_JTableCategoriaMouseClicked

    private void JButtonExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JButtonExcluirActionPerformed
        try {

            int id = 0;
            if (this.JTableCategoria.getSelectedRow() == -1) {
                throw new Mensagem("Primeiro selecione uma categoria para remover");
            } else {
                id = Integer.parseInt(this.JTableCategoria
                        .getValueAt(this.JTableCategoria.getSelectedRow(), 0)
                        .toString());
            }

            int respostaUsuario = JOptionPane.showConfirmDialog(
                    null,
                    "Tem certeza que deseja remover esta categoria?",
                    "Confirmação",
                    JOptionPane.YES_NO_OPTION
            );

            if (respostaUsuario == JOptionPane.YES_OPTION) {
                CadastrarCategoriaDao dao = new CadastrarCategoriaDao();
                if (dao.removerCategoria(id)) {
                    // Limpa os campos após remoção
                    this.JTextID.setText("");
                    this.JTextNome.setText("");
                    JOptionPane.showMessageDialog(
                            rootPane,
                            "Categoria removida com sucesso!"
                    );
                }
            }
            CadastrarCategoriaDao dao = new CadastrarCategoriaDao();
            System.out.println(dao.getLista().toString());

        } catch (Mensagem erro) {
            JOptionPane.showMessageDialog(null, erro.getMessage());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "ID inválido");
        } finally {
            carregaTabela();
        }
    }//GEN-LAST:event_JButtonExcluirActionPerformed

    private void JButtonListarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JButtonListarActionPerformed
        carregaTabela();
    }//GEN-LAST:event_JButtonListarActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        carregaTabela();
    }//GEN-LAST:event_formWindowActivated

    private void JTextIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JTextIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JTextIDActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmCadastrarCat.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmCadastrarCat.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmCadastrarCat.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmCadastrarCat.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmCadastrarCat().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton JButtonCadastrar;
    private javax.swing.JButton JButtonEditar;
    private javax.swing.JButton JButtonExcluir;
    private javax.swing.JButton JButtonListar;
    private javax.swing.JButton JButtonSair;
    private javax.swing.JTable JTableCategoria;
    private javax.swing.JTextField JTextID;
    private javax.swing.JTextField JTextNome;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
